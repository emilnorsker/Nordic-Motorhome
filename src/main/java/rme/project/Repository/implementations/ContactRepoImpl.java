package rme.project.Repository.implementations;

/**
 * @Responsibility Rasmus Wedelheim
 */

import rme.project.Models.Contact;
import rme.project.Repository.interfaces.IContactRepo;
import rme.project.Util.DBConnection;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;


public class ContactRepoImpl implements IContactRepo {

    Connection conn = DBConnection.getDatabaseConnection();

    @Override
    public void create(Contact contact) {

        //


        try {
            PreparedStatement createContact = conn.prepareStatement("INSERT INTO contact (contact_id,firstName, lastName, email, phone) VALUES (?,?,?,?,?)");


            createContact.setInt(1, contact.getContact_id());
            createContact.setString(2, contact.getFirstName());
            createContact.setString(3, contact.getLastName());
            createContact.setString(4, contact.getEmail());
            createContact.setString(5, contact.getPhone());

            createContact.executeUpdate();

        } catch (SQLException e) {
            e.printStackTrace();
        }

    }


    @Override
    public Contact read(int id) {
        Contact contact = null;
        try {
            contact = new Contact();
            PreparedStatement statement = conn.prepareStatement("SELECT * FROM contact WHERE contact_id=?");

            statement.setInt(1, id);

            ResultSet rs = statement.executeQuery();
            while (rs.next()) {
                //motorhome.setID(rs.getInt(1)); // todo use the autogenerated function of SQL
                contact.setFirstName(rs.getString(2));
                contact.setLastName(rs.getString(3));
                contact.setEmail(rs.getString(4));
                contact.setPhone(rs.getString(5));
            }
        } catch (Exception e) {
            System.out.println(e); // we're only printing, for the sake of not interrupting the system.
        } finally {
            return contact;
        }
    }

    @Override
    public List<Contact> readAll() {
        List<Contact> contact = null;
        try {
            contact = new ArrayList<Contact>();
            PreparedStatement statement = conn.prepareStatement("SELECT * FROM contact");


            ResultSet rs = statement.executeQuery();
            while (rs.next()) {
                Contact ct = new Contact();
                // todo assign ID:
                ct.setContact_id(rs.getInt(1));
                ct.setFirstName(rs.getString(2));
                ct.setLastName(rs.getString(3));
                ct.setEmail(rs.getString(4));
                ct.setPhone(rs.getString(5));
                contact.add(ct);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            return contact;
        }
    }

    @Override
    public void update(Contact contact) {
        try {
            PreparedStatement statement = conn.prepareStatement("UPDATE contact SET firstName = ?, lastName = ?, email =?, phone = ? WHERE contact_id = ?"); //todo not working

            System.out.println("contact updating fname = " + contact.getFirstName());
            statement.setString(1, contact.getFirstName());
            statement.setString(2, contact.getLastName());
            statement.setString(3, contact.getEmail());
            statement.setString(4, contact.getPhone());
            statement.setInt(5, contact.getContact_id());

            statement.execute();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public void delete(int id) {
        try {
            PreparedStatement statement = conn.prepareStatement("DELETE FROM contact WHERE contact_id=?");
            statement.setInt(1, id);
            statement.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

}